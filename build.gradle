plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'io.papermc.paperweight.userdev' version '2.0.0-beta.18'
}

group = "com.dragon"
version = "${project_version}-MC${minecraft_version}-${build_status}.${build_number}"


repositories {
    mavenCentral()
    maven {
        name = "spongepowered-repo"
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url "https://maven.pkg.github.com/Quipt-Minecraft/quipt"
        credentials {
            username = "QuickScythe"
            password = System.getenv("PACKAGES_TOKEN")
        }
    }
//    maven {
//        name = "OffsetMods538"
//        url = "https://maven.offsetmonkey538.top/releases"
//        content {
//            includeGroup "top.offsetmonkey538.meshlib"
//        }
//    }
}

configurations {
    shade
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:${minecraft_version}-${paperweight_build}") // Add this line
//    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.21.8-R0.1")

    // implementation 'org.spongepowered:mixin:0.8.7'
    // implementation "io.github.llamalad7:mixinextras-common:0.5.0"
    // shade 'org.spongepowered:mixin:0.8.7'
    // shade "io.github.llamalad7:mixinextras-common:0.5.0"

    // implementation "net.fabricmc:sponge-mixin:0.16.3+mixin.0.8.7"
    // shade "net.fabricmc:sponge-mixin:0.16.3+mixin.0.8.7"

    // compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0"))

//    compileOnly("io.papermc.paper:paper-api:${minecraft_version}-${paperweight_build}")
    implementation "org.json:json:$json_version"
    implementation "com.quiptmc:core:${quipt_version}"
    shade "org.json:json:$json_version"
    shade "com.quiptmc:core:${quipt_version}"
//    implementation "top.offsetmonkey538.meshlib:mesh-lib-paper:${mesh_version}"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("${minecraft_version}")
    }
}

def targetJavaVersion = Integer.parseInt("${java_version}")
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.register("copyGradleProperties", Copy) {
    from rootProject.file('gradle.properties')
    into "src/main/resources/"
}

tasks.processResources.dependsOn("copyGradleProperties")

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [minecraft_version: minecraft_version, author: author, name: rootProject.name, project_version: project_version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    archiveClassifier.set("")
}

// Ensure 'build' produces the shaded jar
tasks.named("assemble") {
    dependsOn tasks.named("shadowJar")
}
